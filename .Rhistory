shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
install.packages("countrycode")
runApp()
install.packages("shinyjs")
runApp()
install.packages("V8")
runApp()
library(countrycode)
countrycode::countrycode()
countrycode::codelist
countrycode::codelist$country.name.en
codelist$country.name.en
runApp()
shiny_token <- gs_auth() # authenticate w/ your desired Google identity here
saveRDS(shiny_token, "google_token.rds")
View(shiny_token)
shiny_token
runApp()
runApp()
filler <- matrix("-", nrow = 1, ncol = 17,
dimnames = list(NULL,c('First','Last','Email','Country','Affiliation','Career','Handle',
'TimeZone','TimeZoneDST','SocialMedia','OtherSocial','Title','Abstract','Session','Keywords','Language','OtherAbs')))
## prepare the OAuth token and set up the target sheet:
##  - do this interactively
##  - do this EXACTLY ONCE
shiny_token <- gs_auth() # authenticate w/ your desired Google identity here
### A new token must be generated for a new app
saveRDS(shiny_token, "google_token.rds")
ss <- gs_new("WSTC5_Registration",
row_extent = 1, col_extent = 17, input = filler)
ss
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("googlesheets")
runApp()
install.packages("shinythemes")
runApp()
install.packages("countrycode")
runApp()
install.packages("shinyjs")
runApp()
install.packages("V8")
runApp()
runApp()
runApp()
deployApp
shiny::runApp()
